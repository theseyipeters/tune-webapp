{"ast":null,"code":"var _jsxFileName = \"/Users/reliancehealth/Desktop/Tune App/tune/src/components/main/search.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport './main.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search(props) {\n  _s();\n  const [searchInput, setSearchInput] = useState('');\n  const [artists, setArtists] = useState([]);\n  const [tracks, setTracks] = useState([]);\n  const token = window.localStorage.getItem(\"token\");\n\n  // const renderArtists = () => {\n  //   return artists.map(artist => (\n  //     <div key={artist.id}>\n  //         {artist.images.length ? <img width={'200px'} height={'200px'} src={artist.images[0].url} alt={artist.name} /> : <div>No Image</div>} \n  //         {artist.name}\n  //     </div>\n  //   ))\n  // }\n\n  const search = async e => {\n    e.preventDefault();\n    const {\n      data\n    } = await axios.get(\"https://api.spotify.com/v1/tracks\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        q: searchInput,\n        type: \"tracks\"\n      }\n    });\n    console.log(data);\n    props.setSearchArtists([...data.artists.items]);\n    // props.setSearchTracks ([...data.tracks])\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-pane\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arrows\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-arrow-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-bar\",\n        onSubmit: search,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => setSearchInput(event.target.value),\n          type: \"text\",\n          className: \"searchbar\",\n          placeholder: \"Search artist, albums and tracks...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn\",\n          onClick: search,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"MD8e+eJi7Dli9eXZJXuj7WNzU/E=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","axios","useState","useEffect","jsxDEV","_jsxDEV","Search","props","_s","searchInput","setSearchInput","artists","setArtists","tracks","setTracks","token","window","localStorage","getItem","search","e","preventDefault","data","get","headers","Authorization","params","q","type","console","log","setSearchArtists","items","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","event","target","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/reliancehealth/Desktop/Tune App/tune/src/components/main/search.js"],"sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport { useState, useEffect } from 'react';\nimport './main.css'\n\nexport default function Search(props) {\n\n  \n  const [searchInput, setSearchInput] = useState('')\n  const [artists, setArtists] = useState([])\n  const [tracks, setTracks] = useState([])\n\n  const token = window.localStorage.getItem(\"token\")\n  \n\n\n\n  // const renderArtists = () => {\n  //   return artists.map(artist => (\n  //     <div key={artist.id}>\n  //         {artist.images.length ? <img width={'200px'} height={'200px'} src={artist.images[0].url} alt={artist.name} /> : <div>No Image</div>} \n  //         {artist.name}\n  //     </div>\n  //   ))\n  // }\n\n\n\n\n  const search = async (e) => {\n    e.preventDefault()\n    const {data} = await axios.get(\"https://api.spotify.com/v1/tracks\", {\n      headers: {\n        Authorization: `Bearer ${token}`\n      },\n      params: {\n        q: searchInput,\n        type: \"tracks\" \n      }\n    })\n\n    console.log(data)\n    \n    props.setSearchArtists([...data.artists.items])\n    // props.setSearchTracks ([...data.tracks])\n\n    \n   \n    \n  }\n    \n\n\n  return (\n    <div className='search-pane'>\n      <div className='arrows'>\n        <i className='fas fa-arrow-left'></i>\n        <i className='fas fa-arrow-right'></i>\n      </div>\n      <div className='search-container'>\n        <i className='fas fa-search'></i>\n        <form className='form-bar' onSubmit={search}>\n        <input  onChange={event => setSearchInput(event.target.value)} type='text' className='searchbar' placeholder='Search artist, albums and tracks...' />\n        <button type='submit' className='btn' onClick={search}>Search</button>\n        </form> \n      </div>\n    </div>\n  )\n}\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}