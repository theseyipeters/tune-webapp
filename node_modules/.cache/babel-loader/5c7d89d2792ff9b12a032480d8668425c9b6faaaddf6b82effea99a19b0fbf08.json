{"ast":null,"code":"var _jsxFileName = \"/Users/reliancehealth/Desktop/Tune App/tune/src/components/main/results.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport \"./results.css\";\nimport \"./main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Results(props) {\n  var _s = $RefreshSig$();\n  console.log(\"Received artists:\", props.results.artists);\n  console.log(\"Received tracks:\", props.results.tracks);\n  const formatDuration = milliseconds => {\n    const totalSeconds = Math.floor(milliseconds / 1000);\n    const minutes = Math.floor(totalSeconds / 60);\n    const seconds = totalSeconds % 60;\n    return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n  };\n  const renderArtists = () => {\n    if (!props.results.artists || !Array.isArray(props.results.artists)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No artists available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this); // Handle the case when artists data is missing or not an array\n    }\n\n    return props.results.artists.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [artist.images.length ? /*#__PURE__*/_jsxDEV(\"a\", {\n        href: artist.external_urls.spotify,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"image\",\n          width: \"105px\",\n          height: \"105px\",\n          src: artist.images[0].url,\n          alt: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n        href: artist.external_urls.spotify,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-image\",\n          width: \"105px\",\n          height: \"105px\",\n          children: \"?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this), artist.name]\n    }, artist.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this));\n  };\n  const renderTracks = () => {\n    _s();\n    if (!props.results.tracks || !Array.isArray(props.results.tracks)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No tracks available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this); // Handle the case when tracks data is missing or not an array\n    }\n\n    const audioRef = /*#__PURE__*/React.createRef(); // Create a ref for the audio element\n    const [currentTrack, setCurrentTrack] = useState(null);\n    const playPreview = (previewUrl, trackId) => {\n      const audio = audioRef.current;\n      if (currentTrack === trackId) {\n        audio.pause();\n        setCurrentTrack(null);\n      } else {\n        audio.src = previewUrl;\n        audio.play();\n        setCurrentTrack(trackId);\n      }\n    };\n    return props.results.tracks.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"track\",\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: track.album.images[0].url,\n          alt: track.album.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"track-name\",\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"track-album-name\",\n        children: track.album.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: formatDuration(track.duration_ms)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: currentTrack === track.id ? \"fa-solid fa-pause\" : \"fa-solid fa-play\",\n        onClick: () => playPreview(track.preview_url, track.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)]\n    }, track.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this));\n  };\n  _s(renderTracks, \"XYGoH0Kdrge7pFJ7Ftqcm4RG66I=\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: renderTracks()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Artists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: renderArtists()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 3\n  }, this);\n}\n_c = Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","Results","props","_s","$RefreshSig$","console","log","results","artists","tracks","formatDuration","milliseconds","totalSeconds","Math","floor","minutes","seconds","renderArtists","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","map","artist","className","images","length","href","external_urls","spotify","width","height","src","url","alt","name","id","renderTracks","audioRef","createRef","currentTrack","setCurrentTrack","useState","playPreview","previewUrl","trackId","audio","current","pause","play","track","ref","album","duration_ms","onClick","preview_url","_c","$RefreshReg$"],"sources":["/Users/reliancehealth/Desktop/Tune App/tune/src/components/main/results.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport \"./results.css\";\nimport \"./main.css\";\n\nexport default function Results(props) {\n\tconsole.log(\"Received artists:\", props.results.artists);\n\tconsole.log(\"Received tracks:\", props.results.tracks);\n\n\tconst formatDuration = (milliseconds) => {\n\t\tconst totalSeconds = Math.floor(milliseconds / 1000);\n\t\tconst minutes = Math.floor(totalSeconds / 60);\n\t\tconst seconds = totalSeconds % 60;\n\t\treturn `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n\t};\n\n\tconst renderArtists = () => {\n\t\tif (!props.results.artists || !Array.isArray(props.results.artists)) {\n\t\t\treturn <div>No artists available</div>; // Handle the case when artists data is missing or not an array\n\t\t}\n\t\treturn props.results.artists.map((artist) => (\n\t\t\t<div\n\t\t\t\tclassName=\"result\"\n\t\t\t\tkey={artist.id}>\n\t\t\t\t{artist.images.length ? (\n\t\t\t\t\t<a href={artist.external_urls.spotify}>\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tclassName=\"image\"\n\t\t\t\t\t\t\twidth={\"105px\"}\n\t\t\t\t\t\t\theight={\"105px\"}\n\t\t\t\t\t\t\tsrc={artist.images[0].url}\n\t\t\t\t\t\t\talt={artist.name}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</a>\n\t\t\t\t) : (\n\t\t\t\t\t<a href={artist.external_urls.spotify}>\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"no-image\"\n\t\t\t\t\t\t\twidth={\"105px\"}\n\t\t\t\t\t\t\theight={\"105px\"}>\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t)}\n\t\t\t\t{/* <br /> */}\n\t\t\t\t{artist.name}\n\t\t\t</div>\n\t\t));\n\t};\n\n\tconst renderTracks = () => {\n\t\tif (!props.results.tracks || !Array.isArray(props.results.tracks)) {\n\t\t\treturn <div>No tracks available</div>; // Handle the case when tracks data is missing or not an array\n\t\t}\n\t\tconst audioRef = React.createRef(); // Create a ref for the audio element\n\t\tconst [currentTrack, setCurrentTrack] = useState(null);\n\n\t\tconst playPreview = (previewUrl, trackId) => {\n\t\t\tconst audio = audioRef.current;\n\t\t\tif (currentTrack === trackId) {\n\t\t\t\taudio.pause();\n\t\t\t\tsetCurrentTrack(null);\n\t\t\t} else {\n\t\t\t\taudio.src = previewUrl;\n\t\t\t\taudio.play();\n\t\t\t\tsetCurrentTrack(trackId);\n\t\t\t}\n\t\t};\n\n\t\treturn props.results.tracks.map((track) => (\n\t\t\t<div\n\t\t\t\tclassName=\"track\"\n\t\t\t\tkey={track.id}>\n\t\t\t\t<audio ref={audioRef}></audio>\n\t\t\t\t<div className=\"track-image\">\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={track.album.images[0].url}\n\t\t\t\t\t\talt={track.album.name}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<p className=\"track-name\">{track.name}</p>\n\t\t\t\t<p className=\"track-album-name\">{track.album.name}</p>\n\t\t\t\t<p>{formatDuration(track.duration_ms)}</p>\n\t\t\t\t<i\n\t\t\t\t\tclassName={\n\t\t\t\t\t\tcurrentTrack === track.id ? \"fa-solid fa-pause\" : \"fa-solid fa-play\"\n\t\t\t\t\t}\n\t\t\t\t\tonClick={() => playPreview(track.preview_url, track.id)}></i>\n\t\t\t</div>\n\t\t));\n\t};\n\n\treturn (\n\t\t<div className=\"results-container\">\n\t\t\t<h2>Tracks</h2>\n\t\t\t<div className=\"results\">{renderTracks()}</div>\n\t\t\t<h2>Artists</h2>\n\t\t\t<div className=\"results\">{renderArtists()}</div>\n\t\t</div>\n\t);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}