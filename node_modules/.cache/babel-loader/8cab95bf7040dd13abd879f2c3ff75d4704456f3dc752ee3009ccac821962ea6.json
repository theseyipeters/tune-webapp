{"ast":null,"code":"var _jsxFileName = \"/Users/reliancehealth/Desktop/TUNE-MUSIC-PLATFORM/tune_webapp/src/screens/home/index.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./home.css\";\nimport Sidebar from \"../../components/sidebar\";\nimport RightSidebar from \"../../components/right-sidebar\";\nimport Main from \"../../components/main/main\";\nimport Login from \"../../screens/auth/login\";\nimport { setClientToken } from \"../../spotify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [token, setToken] = useState(\"\");\n  useEffect(() => {\n    const token = window.localStorage.getItem(\"token\");\n    const hash = window.location.hash;\n    window.location.hash = \"\";\n\n    // Function to check if the token is expired\n    const isTokenExpired = token => {\n      if (!token) return true; // Token is considered expired if it's not present\n\n      const tokenPayload = JSON.parse(atob(token.split(\".\")[1])); // Decode token and parse payload\n      const expirationTime = tokenPayload.exp * 1000; // Convert expiration time to milliseconds\n      const currentTime = new Date().getTime(); // Current time in milliseconds\n\n      return expirationTime < currentTime; // Token is expired if expiration time is less than current time\n    };\n\n    if (!token && hash) {\n      const _token = hash.split(\"&\")[0].split(\"=\")[1];\n      window.localStorage.setItem(\"token\", _token);\n      setToken(_token);\n      setClientToken(_token);\n    } else if (token && !isTokenExpired(token)) {\n      setToken(token);\n      setClientToken(token);\n    } else {\n      // Token is expired or not present, so clear local storage and token state\n      window.localStorage.removeItem(\"token\");\n      setToken(\"\");\n    }\n  }, []);\n  return !token ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-body\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(RightSidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 3\n  }, this);\n}\n_s(Home, \"uRWVyxPfKU3Lv5uAeNftFtP/ZvU=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","RightSidebar","Main","Login","setClientToken","jsxDEV","_jsxDEV","Home","_s","token","setToken","window","localStorage","getItem","hash","location","isTokenExpired","tokenPayload","JSON","parse","atob","split","expirationTime","exp","currentTime","Date","getTime","_token","setItem","removeItem","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/Users/reliancehealth/Desktop/TUNE-MUSIC-PLATFORM/tune_webapp/src/screens/home/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./home.css\";\nimport Sidebar from \"../../components/sidebar\";\nimport RightSidebar from \"../../components/right-sidebar\";\nimport Main from \"../../components/main/main\";\nimport Login from \"../../screens/auth/login\";\nimport { setClientToken } from \"../../spotify\";\n\nexport default function Home() {\n\tconst [token, setToken] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tconst token = window.localStorage.getItem(\"token\");\n\t\tconst hash = window.location.hash;\n\t\twindow.location.hash = \"\";\n\n\t\t// Function to check if the token is expired\n\t\tconst isTokenExpired = (token) => {\n\t\t\tif (!token) return true; // Token is considered expired if it's not present\n\n\t\t\tconst tokenPayload = JSON.parse(atob(token.split(\".\")[1])); // Decode token and parse payload\n\t\t\tconst expirationTime = tokenPayload.exp * 1000; // Convert expiration time to milliseconds\n\t\t\tconst currentTime = new Date().getTime(); // Current time in milliseconds\n\n\t\t\treturn expirationTime < currentTime; // Token is expired if expiration time is less than current time\n\t\t};\n\n\t\tif (!token && hash) {\n\t\t\tconst _token = hash.split(\"&\")[0].split(\"=\")[1];\n\t\t\twindow.localStorage.setItem(\"token\", _token);\n\t\t\tsetToken(_token);\n\t\t\tsetClientToken(_token);\n\t\t} else if (token && !isTokenExpired(token)) {\n\t\t\tsetToken(token);\n\t\t\tsetClientToken(token);\n\t\t} else {\n\t\t\t// Token is expired or not present, so clear local storage and token state\n\t\t\twindow.localStorage.removeItem(\"token\");\n\t\t\tsetToken(\"\");\n\t\t}\n\t}, []);\n\n\treturn !token ? (\n\t\t<Login />\n\t) : (\n\t\t<div className=\"main-body\">\n\t\t\t<Sidebar />\n\t\t\t<Main />\n\t\t\t<RightSidebar />\n\t\t</div>\n\t);\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,YAAY,MAAM,gCAAgC;AACzD,OAAOC,IAAI,MAAM,4BAA4B;AAC7C,OAAOC,KAAK,MAAM,0BAA0B;AAC5C,SAASC,cAAc,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACf,MAAMW,KAAK,GAAGE,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAClD,MAAMC,IAAI,GAAGH,MAAM,CAACI,QAAQ,CAACD,IAAI;IACjCH,MAAM,CAACI,QAAQ,CAACD,IAAI,GAAG,EAAE;;IAEzB;IACA,MAAME,cAAc,GAAIP,KAAK,IAAK;MACjC,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI,CAAC,CAAC;;MAEzB,MAAMQ,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACX,KAAK,CAACY,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAC5D,MAAMC,cAAc,GAAGL,YAAY,CAACM,GAAG,GAAG,IAAI,CAAC,CAAC;MAChD,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE,CAAC,CAAC;;MAE1C,OAAOJ,cAAc,GAAGE,WAAW,CAAC,CAAC;IACtC,CAAC;;IAED,IAAI,CAACf,KAAK,IAAIK,IAAI,EAAE;MACnB,MAAMa,MAAM,GAAGb,IAAI,CAACO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC/CV,MAAM,CAACC,YAAY,CAACgB,OAAO,CAAC,OAAO,EAAED,MAAM,CAAC;MAC5CjB,QAAQ,CAACiB,MAAM,CAAC;MAChBvB,cAAc,CAACuB,MAAM,CAAC;IACvB,CAAC,MAAM,IAAIlB,KAAK,IAAI,CAACO,cAAc,CAACP,KAAK,CAAC,EAAE;MAC3CC,QAAQ,CAACD,KAAK,CAAC;MACfL,cAAc,CAACK,KAAK,CAAC;IACtB,CAAC,MAAM;MACN;MACAE,MAAM,CAACC,YAAY,CAACiB,UAAU,CAAC,OAAO,CAAC;MACvCnB,QAAQ,CAAC,EAAE,CAAC;IACb;EACD,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO,CAACD,KAAK,gBACZH,OAAA,CAACH,KAAK;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG,gBAET3B,OAAA;IAAK4B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACzB7B,OAAA,CAACN,OAAO;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACX3B,OAAA,CAACJ,IAAI;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACR3B,OAAA,CAACL,YAAY;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEjB;AACF;AAACzB,EAAA,CA3CuBD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}